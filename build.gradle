// централизованного управления версиями плагинов  с apply false
plugins {
    id 'java'
    // Apply false - плагин будет применен в подпроектах, но его версия объявлена здесь
    alias(libs.plugins.lombok) apply false
    alias(libs.plugins.springBoot) apply false
}

allprojects {
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'

    dependencies {
        // JUnit 5 BOM для управления версиями
        implementation platform(libs.spring.boot.dependencies)

        // JUnit 5 BOM для управления версиями
        testImplementation platform(libs.junit.bom)

        // Junit 5 integration
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.platform:junit-platform-launcher'
        // AssertJ (для улучшенных утверждений)
        testImplementation libs.assertj.core
    }

    // Настройка Test задач (test, integrationTest, performanceTest и пр.), общая для всех подпроектов
    tasks.withType(Test).configureEach {
        // required for JUnit 5
        useJUnitPlatform()

        // Show log in the console
        /*testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat = "full"
        }*/

        // Запускать тесты параллельно (осторожно с ресурсоемкими тестами)
        // maxParallelForks = Runtime.runtime.availableProcessors()
        // Включение/исключение конкретных тестов
        // include '**/MySpecificTest.class'
        // exclude '**/SlowTests.class'
    }
}