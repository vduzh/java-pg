eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ # Регистрируемся в Eureka

server:
  port: 8765

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              # Автоматически создает маршруты для сервисов, зарегистрированных в Eureka
              enabled: true
              # Преобразовывать Service ID в нижний регистр для маршрутизации
              lower-case-service-id: true
          routes:
            # Маршрут для foo-service
            - id: foo-service-route # unique name
              uri: lb://foo-service # URI to pass request if it meets the predicates
              predicates:
                - Path=/api/v1/foo/** # /api/v1/foo -> foo-service/
              filters:
                - StripPrefix=3 # foo/** goes to foo-service
            - id: bar-service-route
              uri: lb://bar-service
              predicates:
                - Path=/api/v1/bar/**
              filters:
                - StripPrefix=3

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    gateway:
      access: unrestricted

logging:
  level:
    # Установите общий уровень логирования для Gateway
    org.springframework.cloud.gateway: DEBUG
    # DEBUG даст очень много информации. Если нужно меньше, можно INFO или TRACE для самых подробных

    # Для более детальной информации о маршрутизации
    org.springframework.cloud.gateway.handler.mapping.RoutePredicateHandlerMapping: TRACE
    org.springframework.cloud.gateway.handler.predicate: TRACE

    # Для отслеживания перенаправления запросов
    org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter: DEBUG

    # Для фильтров (например, CircuitBreaker, RateLimiter)
    org.springframework.cloud.gateway.filter.GatewayFilter: DEBUG
    org.springframework.cloud.gateway.filter.GlobalFilter: DEBUG

    # Для низкоуровневой сетевой активности (осторожно, очень много логов!)
    reactor.netty: INFO # DEBUG или TRACE может быть слишком много

    # Для логирования WebFlux-компонентов
    org.springframework.web.reactive: DEBUG

    # Для Eureka (если используете)
    org.springframework.cloud.client.discovery: DEBUG
    com.netflix.eureka: INFO # Или DEBUG

    # Общий уровень для Spring Boot (по умолчанию INFO)
    org.springframework.boot: INFO
    root: INFO # Корневой уровень логирования для всего приложения